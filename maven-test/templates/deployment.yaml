apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "maven-test.fullname" . }}
  labels:
    {{- include "maven-test.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "maven-test.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "maven-test.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              HOSTNAME=$(hostname)
              echo "Running tests with suite: $HOSTNAME"
              
              # Prepare result directories
              mkdir -p /mnt/results/.m2
              mkdir -p /mnt/results/$HOSTNAME
              
              # Force clean target directory (remove problematic files)
              echo "Cleaning target directory..."
              rm -rf /app/target 2>/dev/null || true
              [ -d "/app/target" ] && chmod -R 777 /app/target 2>/dev/null && rm -rf /app/target || true
              
              # Skip Maven clean since we already cleaned manually
              echo "Compiling and running tests..."
              mvn compile test \
                -Dmaven.repo.local=/mnt/results/.m2 \
                -DsuiteXmlFile=testng-automation/testng-simple.xml \
                -Dsurefire.reportsDirectory=/mnt/results/$HOSTNAME
              
              # Verify test results exist
              if [ -d "/mnt/results/$HOSTNAME" ] && [ "$(ls -A /mnt/results/$HOSTNAME)" ]; then
                echo "Test results found, generating HTML reports..."
                
                # Copy surefire reports to default location for report generation
                mkdir -p /app/target/surefire-reports
                cp -r /mnt/results/$HOSTNAME/* /app/target/surefire-reports/ 2>/dev/null || true
                
                # Generate HTML reports
                mvn surefire-report:report-only \
                  -Dmaven.repo.local=/mnt/results/.m2 \
                  -DoutputDirectory=/mnt/results/$HOSTNAME 2>/dev/null || {
                  echo "HTML report generation failed, but XML reports are available"
                }
                
                # Copy any generated site reports
                if [ -d "/app/target/site" ]; then
                  cp -r /app/target/site/* /mnt/results/$HOSTNAME/ 2>/dev/null || true
                fi
              else
                echo "No test results found in /mnt/results/$HOSTNAME"
              fi
              
              echo "Process completed. Results location: /mnt/results/$HOSTNAME"
              
              # List final results
              echo "Final results structure:"
              ls -la /mnt/results/$HOSTNAME/ 2>/dev/null || echo "No results directory found"
              
              # Show test summary if available
              if [ -f "/mnt/results/$HOSTNAME/TEST-*.xml" ]; then
                echo "Test summary:"
                grep -h "testsuite" /mnt/results/$HOSTNAME/TEST-*.xml | head -5 || true
              fi
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}